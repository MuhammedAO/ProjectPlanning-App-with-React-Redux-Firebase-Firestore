{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/projectActions.js","components/projects/CreateProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","Notifications","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","toString","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleSubmit","e","preventDefault","signIn","handleChange","setState","target","value","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","createProject","authorId","add","Date","CreateProject","history","push","App","exact","path","component","ProjectDetails","isLocalhost","Boolean","window","location","hostname","register","config","navigator","URL","process","href","origin","addEventListener","swUrl","fetch","response","contentType","headers","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","InitState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db260ce1.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\nimport {signOut} from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n\r\n    return(\r\n        <ul className=\"right\">\r\n           <li><NavLink to='/create'>New Project</NavLink></li>\r\n           <li><a onClick={props.signOut}>Log Out</a></li>\r\n           <li><NavLink to='/' className=\"btn btn-floating pink text-white lighten-1\">\r\n           {props.profile.initials}\r\n           </NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) =>{\r\nreturn (dispatch, getState, {getFirebase}) =>{\r\n    const firebase = getFirebase();\r\n    firebase.auth().signInWithEmailAndPassword(\r\n        credentials.email,\r\n        credentials.password\r\n    ).then(() =>{\r\n        dispatch({type:'LOGIN_SUCCESS'});\r\n    }).catch((err)=>{\r\n        dispatch({type:'LOGIN_ERROR', err});\r\n    });\r\n}\r\n};\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n      const firebase = getFirebase();\r\n  \r\n      firebase.auth().signOut().then(() => {\r\n        dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n      });\r\n    }\r\n  };\r\n\r\n  export const signUp = (newUser) =>{\r\n    return (dispatch, getState, {getFirebase, getFirestore}) =>{\r\n      const firebase = getFirebase();\r\n      const firestore = getFirestore();\r\n\r\n      firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then((resp) =>{\r\n       return firestore.collection('users').doc(resp.user.uid).set({\r\n         firstName : newUser.firstName,\r\n         lastName: newUser.lastName,\r\n         initials: newUser.firstName[0] + newUser.lastName[0]\r\n       })\r\n      }).then(() =>{\r\n        dispatch({type:'SIGNUP_SUCCESS'})\r\n      }).catch(err=>{\r\n       dispatch({type:'SIGNUP_ERROR', err})\r\n      })\r\n    }\r\n  }","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return(\r\n        <ul className=\"right\">\r\n           <li><NavLink to='/signup'>Signup</NavLink></li>\r\n           <li><NavLink to='/signin'>Login</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport {connect} from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n  const {auth, profile} = props;\r\n  const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks/>;\r\n    return(\r\n      <nav className=\"nav-wrapper black darken-3\">\r\n          <div className=\"container\">\r\n          <Link to='/' className=\"brand-logo\">devPlan</Link>\r\n          {links}\r\n          </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  console.log(state);\r\nreturn{\r\n  auth: state.firebase.auth,\r\n  profile: state.firebase.profile\r\n}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react';\r\nimport moment from 'moment'\r\n\r\n\r\n\r\nconst Notifications = (props) =>{\r\n    const {notifications }= props;\r\n    return(\r\n    <div className=\"section\">\r\n    <div className=\"card z-depth-0\">\r\n    <div className=\"card-content\">\r\n        <span className=\"card-title\">Notifications</span>\r\n        <ul className=\"notifcations\">\r\n        {notifications && notifications.map(notification =>{\r\n         return (\r\n             <li key={notification.id}>\r\n                 <span className=\"blue-text text-darken-4\">{notification.user} </span>\r\n                 <span>{notification.content}</span>\r\n                 <div className=\"grey-text note-date\">\r\n                 {moment(notification.time.toDate()).fromNow()}\r\n                 </div>\r\n             </li>\r\n         )\r\n        })}\r\n        </ul>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Notifications\r\n\r\n","import React from 'react';\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) =>{\r\n    return(\r\n         <div className=\"card z-depth-0 project-summary\">\r\n         <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n        <p className=\"grey-text\">{moment(project.createdAt.toDate().toString()).calendar()}</p>\r\n         </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst ProjectList = ({projects}) =>{\r\n    return(\r\n       <div className=\"project-list section\">\r\n          {projects && projects.map(project => {\r\n              return (\r\n                  <Link to={'/project/' + project.id }key={project.id}>\r\n                  <ProjectSummary project={project} />\r\n                  </Link>\r\n              )\r\n          })}\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList","import React , {Component} from 'react'\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nclass Dashboard extends Component{\r\n    render() {\r\n        // console.log(this.props);\r\n        const {projects, auth, notifications} = this.props\r\n        if (!auth.uid) return <Redirect to ='/signin'/>\r\n        return(\r\n        <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n        <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects}/>\r\n        </div> \r\n        <div className=\"col s12 m5 offset-m1\">\r\n        <Notifications notifications={notifications}/>\r\n        \r\n        </div> \r\n        </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return {\r\n      projects: state.firestore.ordered.projects,\r\n      auth: state.firebase.auth,\r\n      notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection:'projects' ,  orderBy : ['createdAt', 'desc']},\r\n        {collection:'notifications', limit:3, orderBy : ['time', 'desc']}\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails =(props)=> {\r\n    const {project,auth} = props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>\r\n    if (project) {\r\n        return (<div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content}</p>\r\n        </div>\r\n        <div className=\"card-action grey lighten-4 grey-text\">\r\n    <div>Posted By {project.authorFirstName} {project.authorLastName}</div>\r\n    <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\r\n        </div>\r\n        </div>\r\n</div>)\r\n\r\n    }\r\n    else{\r\n        return (\r\n            <div className=\"container center\">\r\n             <p>Loading Project...</p>\r\n            </div>\r\n         )\r\n    }\r\n}\r\nconst mapStateToProps = (state, ownProps) =>{\r\nconst id = ownProps.match.params.id;\r\nconst projects = state.firestore.data.projects;\r\nconst project = projects ? projects[id] : null\r\nreturn {\r\nproject:project,\r\nauth: state.firebase.auth\r\n}\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection:'projects'}\r\n    ])\r\n)(ProjectDetails)\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport{ signIn} from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email:'',\r\n        password:''\r\n    }\r\n\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n    //    console.log(this.state);\r\n      this.props.signIn(this.state);\r\n    }\r\n\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        });\r\n    }\r\n    render() {\r\n        const {authError,auth} = this.props\r\n        if (auth.uid) return <Redirect to='/'/>\r\n        return (\r\n        <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n            <div className=\"input-field\">\r\n           <label htmlFor=\"email\">Email</label>\r\n           <input type=\"email\" id=\"email\" onChange={this.handleChange}/>     \r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n           <label htmlFor=\"password\">Password</label>\r\n           <input type=\"password\" id=\"password\" onChange={this.handleChange}/>     \r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n            <button className=\"btn black lighten-1 z-depth-0\">Login</button>\r\n            </div>\r\n            <div className=\"red-text center\">\r\n            {authError? <p>{authError}</p>:null}\r\n            </div>\r\n        </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\nreturn{\r\nauthError: state.auth.authError,\r\nauth: state.firebase.auth\r\n}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\nreturn{\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n}\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn)\r\n","\r\nimport React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signUp} from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email:'',\r\n        password:'',\r\n        firstName:'',\r\n        lastName:''\r\n    }\r\n\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n       this.props.signUp(this.state);\r\n    }\r\n\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        });\r\n    }\r\n    render() {\r\n        const {auth, authError} = this.props\r\n        if (auth.uid) return <Redirect to='/'/>\r\n        return (\r\n        <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n\r\n            <div className=\"input-field\">\r\n           <label htmlFor=\"email\">FirstName</label>\r\n           <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>     \r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n           <label htmlFor=\"email\">LastName</label>\r\n           <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>     \r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n           <label htmlFor=\"email\">Email</label>\r\n           <input type=\"email\" id=\"email\" onChange={this.handleChange}/>     \r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n           <label htmlFor=\"password\">Password</label>\r\n           <input type=\"password\" id=\"password\" onChange={this.handleChange}/>     \r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n            <button className=\"btn black lighten-1 z-depth-0\">Sign Up</button>\r\n            </div>\r\n            <div className=\"red-text center\">\r\n            {authError? <p>{authError}</p>:null}\r\n            </div>\r\n        </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        signUp : (newUser) => dispatch(signUp(newUser))\r\n    }\r\n} \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","export const createProject = (project) =>{\r\nreturn (dispatch, getState,{getFirebase, getFirestore}) =>{\r\n    //make async call to the database\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore.collection('projects').add({\r\n        ...project,\r\n        authorFirstName:profile.firstName,\r\n        authorLastName:profile.lastName,\r\n        authorId: authorId,\r\n        createdAt: new Date()\r\n    }).then(()=>{\r\n\r\n        dispatch({type:'CREATE_PROJECT', project});\r\n    }).catch((err) =>{\r\n        dispatch({\r\n            type:'CREATE_PROJECT_ERROR',\r\n            err\r\n        })\r\n    });\r\n}\r\n};","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createProject} from '../../store/actions/projectActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title:'',\r\n        content:''\r\n    }\r\n\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n    //    console.log(this.state);\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n    }\r\n\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        });\r\n    }\r\n    render() {\r\n        const {auth} = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin'/>\r\n        return (\r\n        <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n            <div className=\"input-field\">\r\n           <label htmlFor=\"title\">Project Title</label>\r\n           <input type=\"text\" id=\"title\" onChange={this.handleChange}/>     \r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n           <label htmlFor=\"content\">Project Content</label>\r\n        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>    \r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n            <button className=\"btn black lighten-1 z-depth-0\">Create</button>\r\n            </div>\r\n        </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n return {\r\n     createProject: (project) => dispatch(createProject(project))\r\n }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject)\r\n","import React,{Component} from 'react';\nimport {BrowserRouter, Switch,Route} from 'react-router-dom'\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\n\nclass App extends Component {\n  render () {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n         <Navbar/>\n         <Switch>\n           <Route exact path='/' component={Dashboard}/>\n           <Route path='/project/:id' component={ProjectDetails}/>\n           <Route path='/signin' component={SignIn}/>\n           <Route path='/signup' component={SignUp}/>\n           <Route path='/create' component={CreateProject}/>\n         </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const InitState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state=InitState, action) =>{\r\n    switch(action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login failed');\r\n        return {\r\n            ...state,\r\n            authError:'Login failed'\r\n        }\r\n        case 'LOGIN_SUCCESS':\r\n        console.log('login success');\r\n        return {\r\n            ...state,\r\n            authError:null\r\n        }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success')\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup successful');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }  \r\n        case 'SIGNUP_ERROR':\r\n           console.log('signup failed');\r\n           return {\r\n               ...state,\r\n            authError: action.err.message\r\n           }       \r\n            \r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\nexport default authReducer ","const InitState = {\r\n    projects: [\r\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state=InitState, action) =>{\r\n    switch(action.type) {\r\n        case 'CREATE_PROJECT':\r\n        console.log('created project', action.project);\r\n        return state\r\n        case 'CREATE_PROJECT_ERROR':\r\n        console.log('create project error', action.err);\r\n        return state\r\n        default:\r\n        return state\r\n    } \r\n\r\n}\r\n\r\nexport default projectReducer ","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport {combineReducers} from 'redux';\r\nimport {firestoreReducer} from 'redux-firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project:projectReducer,\r\n    firestore:firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore' \r\nimport 'firebase/auth'\r\n\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCDZ7-AgvOJJUdoL9UUWje1G_mdhlCjgJs\",\r\n    authDomain: \"devplan-970de.firebaseapp.com\",\r\n    databaseURL: \"https://devplan-970de.firebaseio.com\",\r\n    projectId: \"devplan-970de\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"917228072603\",\r\n    appId: \"1:917228072603:web:a448d6bc4dc95d43afe03e\",\r\n    measurementId: \"G-J9T9LNYW8D\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore().settings({timestampsInSnapshots:true});\r\n\r\n  export default firebase;\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware,compose} from 'redux'\nimport rootReducer from './store/reducers/rootReducer';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk'\nimport {reduxFirestore,getFirestore} from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase} from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\n\n\nconst store = createStore(rootReducer,\n    compose( \napplyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\nreduxFirestore(fbConfig),\nreactReduxFirebase(fbConfig,{useFirestoreForProfile:true , userProfile:'users', attachAuthIsReady:true})\n\n    )\n);\n\nstore.firebaseAuthIsReady.then(()=>{\n\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.register();\n})\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}